buildscript {
    dependencies {
        def measurementPluginJar = project.hasProperty('measurementPluginJar') ? project.property('measurementPluginJar') : null
        if(measurementPluginJar) {
            classpath files(measurementPluginJar)
        }
    }
}

def measurementPluginJar = project.hasProperty('measurementPluginJar') ? project.property('measurementPluginJar') : null
if(measurementPluginJar) {
    apply plugin: org.gradle.performance.plugin.MeasurementPlugin
}

apply plugin: 'cpp'

subprojects {
    model {
        binaries {
            withType(NativeBinarySpec) {
                cppCompiler.define('SOME_MACRO', 'some_value')
            }
        }
    }
}

if(measurementPluginJar) {
    org.gradle.performance.plugin.BuildEventTimeStamps.settingsEvaluated()
}

